server:
  port: 0

spring:
  application:
    name: medical-service
  cloud:
    config:
      enabled: false
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        default_schema: ${APP_POSTGRESQL_SCHEMA:public}
        order_inserts: true
        enable_lazy_load_no_trans: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          lob:
            non_contextual_creation: true
          batch_size: 20
        generate_statistics: false
    show-sql: false
    database: postgresql
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5442/mis_medical_service?currentSchema=public}
    username: ${DATABASE_USERNAME:postgres}
    password: ${DATABASE_PASSWORD:123}
  liquibase:
    enabled: true
    change-log: db/changelog/changelog-master.xml
    default-schema: ${APP_POSTGRESQL_SCHEMA:public}
  kafka:
    bootstrap-servers: 127.0.0.1:9092
    mode: 'PLAINTEXT'
    producer:
      topic:
        save-audit: ${KAFKA_PRODUCER_SAVE_AUDIT_TOPIC:mis_audit_local}
        report-message: ${KAFKA_CONSUMER_REPORT_MESSAGE_TOPIC:mis_report_local}
        send-message: ${KAFKA_PRODUCER_SEND_MESSAGE:mis_message_local}
#        send-message-cancel-talon: ${KAFKA_PRODUCER_SEND_MESSAGE_CANCEL_TALON_TOPIC:mis_message_cancel_talon_local}
    consumer:
      group-id: medical_service_group
      topic:
        block-token: ${KAFKA_CONSUMER_BLOCK_TOKEN:mis_block_token_local}
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher

hazelcast:
  embedded: false
  cache:
    block-access-token: access-token-block-map

eureka:
  instance:
    instance-id: ${spring.application.name}:${random.value}
  client:
    service-url:
      defaultZone: ${EUREKA_URL:http://localhost:8762/eureka}

jwt:
  access:
    secret: ${JWT_ACCESS_SECRET:9CeoZ+XP0l4Bc+nHo9zZEM2Fv6vXby2WtptPE6XZVEoEQAieZK0r+ns3eiho7uu9j3mUv3gSeW+pCXKvBcq5ng==}

app:
  init-fake-data: ${INIT_FAKE_DATA:false}